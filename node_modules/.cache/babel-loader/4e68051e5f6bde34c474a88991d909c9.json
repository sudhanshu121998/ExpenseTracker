{"ast":null,"code":"var _jsxFileName = \"/home/sudhanshu/Desktop/ExpenseTracker/src/Components/NewExpense/ExpenseForm.js\",\n    _s = $RefreshSig$();\n\nimport './ExpenseForm.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpenseForm = props => {\n  _s();\n\n  const [enteredtitle, setenteredTitle] = useState('');\n  const [enteredamount, setenteredAmount] = useState('');\n  const [enteredDate, setenteredDate] = useState('');\n  /*Alternate way of using Multiple states \n  const [userInput,setUserInput]=useState({\n      enteredtitle:''\n      enteredamount:''\n      enteredDate:''\n  });\n  */\n\n  /*event is a default javascript object which gives the value in the field with several properties */\n\n  const titleChangeHandler = event => {\n    /*event.target.value gives the current value in field */\n    setenteredTitle(event.target.value);\n    /*With Second approach need to update complete object and it is used when state\n    depends on previous state\n     setUserInput(prevState)=>{\n        return{...userInput,enteredtitle:event.target.value};\n    });\n    */\n  };\n\n  const amountChangeHandler = event => {\n    setenteredAmount(event.target.value);\n  };\n\n  const dateChangeHandler = event => {\n    setenteredDate(event.target.value);\n  };\n\n  const submitHandler = event => {\n    /*Prevents the default reload of page when form is submitted */\n    event.preventDefault();\n    /*Combine all values in single object */\n\n    const expenseData = {\n      title: enteredtitle,\n      amount: enteredamount,\n      date: new Date(enteredDate)\n    };\n    console.log(expenseData);\n    /*After form is submitted lets reset the placeholders */\n\n    props.onSaveExpenseData(expenseData);\n    /*Called the function of parent component */\n\n    setenteredTitle('');\n    setenteredAmount('');\n    setenteredDate('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: titleChangeHandler,\n          value: enteredtitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0.01\",\n          step: \"0.01\",\n          onChange: amountChangeHandler,\n          value: enteredamount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          min: \"2019-01-01\",\n          max: \"2022-12-31\",\n          onChange: dateChangeHandler,\n          value: enteredDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ExpenseForm, \"1bHnq88FYgDwbSJEuM9+BNUdDFk=\");\n\n_c = ExpenseForm;\nexport default ExpenseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"sources":["/home/sudhanshu/Desktop/ExpenseTracker/src/Components/NewExpense/ExpenseForm.js"],"names":["useState","ExpenseForm","props","enteredtitle","setenteredTitle","enteredamount","setenteredAmount","enteredDate","setenteredDate","titleChangeHandler","event","target","value","amountChangeHandler","dateChangeHandler","submitHandler","preventDefault","expenseData","title","amount","date","Date","console","log","onSaveExpenseData"],"mappings":"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","sourcesContent":["import './ExpenseForm.css'\nimport { useState } from 'react';\nconst ExpenseForm = (props)=>{\n    const [enteredtitle,setenteredTitle]=useState('');\n    const [enteredamount,setenteredAmount]=useState('');\n    const [enteredDate,setenteredDate]=useState('');\n    /*Alternate way of using Multiple states \n    const [userInput,setUserInput]=useState({\n        enteredtitle:''\n        enteredamount:''\n        enteredDate:''\n    });\n    */\n\n    /*event is a default javascript object which gives the value in the field with several properties */\n    const titleChangeHandler =(event)=>{\n        /*event.target.value gives the current value in field */\n        setenteredTitle(event.target.value);\n        /*With Second approach need to update complete object and it is used when state\n        depends on previous state\n\n        setUserInput(prevState)=>{\n            return{...userInput,enteredtitle:event.target.value};\n        });\n        */\n    }\n    const amountChangeHandler =(event)=>{\n        setenteredAmount(event.target.value);\n\n    }\n    const dateChangeHandler =(event)=>{\n        setenteredDate(event.target.value);\n    }\n\n    const submitHandler=(event)=>{\n        /*Prevents the default reload of page when form is submitted */\n        event.preventDefault();\n\n        /*Combine all values in single object */\n        const expenseData={\n            title:enteredtitle,\n            amount:enteredamount,\n            date:new Date(enteredDate)\n        };\n        console.log(expenseData);\n        /*After form is submitted lets reset the placeholders */\n        props.onSaveExpenseData(expenseData); /*Called the function of parent component */\n        setenteredTitle('')\n        setenteredAmount('')\n        setenteredDate('')\n    }\n    return(\n        <form onSubmit={submitHandler}>\n            <div className='new-expense__controls'>\n                <div className='new-expense__control'>\n                    <label>Title</label>\n                    <input type='text' \n                    onChange={titleChangeHandler}\n                    value={enteredtitle}/>      \n                </div>\n                <div className='new-expense__control'>\n                    <label>Amount</label>\n                    <input type='number' min='0.01' step='0.01' \n                    onChange={amountChangeHandler}\n                    value={enteredamount}/>      \n                </div>\n                <div className='new-expense__control'>\n                    <label>Date</label>\n                    <input type='date' min='2019-01-01' max='2022-12-31' onChange={dateChangeHandler}\n                    value={enteredDate}/>      \n                </div>\n            </div>\n            <div className='new-expense__actions'>\n                <button type='submit'>Add Expense</button>\n            </div>\n        </form>\n    );\n\n}\n\nexport default ExpenseForm;"]},"metadata":{},"sourceType":"module"}